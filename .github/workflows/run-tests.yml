name: Tests

on:
  push:
    branches:
      - main
      - '*.x'
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testbench
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3', '8.4' ]

    name: PHP ${{ matrix.php }}
    env:
      extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, grpc
      key: cache-v1 # can be any string, change to clear the extension cache.
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: testbench
      DB_USERNAME: root
      DB_PASSWORD: root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot; then
              break
            fi
            sleep 2
          done

      - name: Show MySQL Variables
        run: mysql -uroot -proot -h127.0.0.1 -e 'show variables'

      - name: Create Database
        run: |
          mysql -uroot -proot -h127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS testbench;'
          mysql -uroot -proot -h127.0.0.1 -e 'CREATE DATABASE IF NOT EXISTS test;'

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - name: Send to codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          flags: unittests
          files: ./coverage.xml
